{
  "apiVersion" : "0.4.12-SNAPSHOT",
  "swaggerVersion" : "1.2",
  "basePath" : null,
  "resourcePath" : "/api/webhooks",
  "produces" : [ "application/json" ],
  "apis" : [ {
    "path" : "/api/webhooks/{webhookId}",
    "operations" : [ {
      "method" : "DELETE",
      "summary" : "Delete a specific webhook.",
      "notes" : "",
      "type" : "string",
      "nickname" : "deleteWebhook",
      "parameters" : [ {
        "name" : "webhookId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ]
    } ]
  }, {
    "path" : "/api/webhooks/deploy/{webhookId}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve a list of queued deploy updates for a specific webhook.",
      "notes" : "",
      "type" : "array",
      "items" : {
        "$ref" : "SingularityDeployUpdate"
      },
      "nickname" : "getQueuedDeployUpdates",
      "parameters" : [ {
        "name" : "webhookId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ]
    } ]
  }, {
    "path" : "/api/webhooks/request/{webhookId}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve a list of queued request updates for a specific webhook.",
      "notes" : "",
      "type" : "array",
      "items" : {
        "$ref" : "SingularityRequestHistory"
      },
      "nickname" : "getQueuedRequestUpdates",
      "parameters" : [ {
        "name" : "webhookId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ]
    } ]
  }, {
    "path" : "/api/webhooks/task/{webhookId}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve a list of queued task updates for a specific webhook.",
      "notes" : "",
      "type" : "array",
      "items" : {
        "$ref" : "SingularityTaskHistoryUpdate"
      },
      "nickname" : "getQueuedTaskUpdates",
      "parameters" : [ {
        "name" : "webhookId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ]
    } ]
  }, {
    "path" : "/api/webhooks",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve a list of active webhooks.",
      "notes" : "",
      "type" : "array",
      "items" : {
        "$ref" : "SingularityWebhook"
      },
      "nickname" : "getActiveWebhooks",
      "parameters" : [ ]
    }, {
      "method" : "POST",
      "summary" : "Add a new webhook.",
      "notes" : "",
      "type" : "string",
      "nickname" : "addWebhook",
      "parameters" : [ {
        "name" : "body",
        "required" : false,
        "type" : "SingularityWebhook",
        "paramType" : "body",
        "allowMultiple" : false
      } ]
    } ]
  } ],
  "models" : {
    "Resources" : {
      "id" : "Resources",
      "properties" : {
        "cpus" : {
          "type" : "number",
          "format" : "double"
        },
        "memoryMb" : {
          "type" : "number",
          "format" : "double"
        },
        "numPorts" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LoadBalancerRequestId" : {
      "id" : "LoadBalancerRequestId",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "requestType" : {
          "$ref" : "LoadBalancerRequestType",
          "enum" : [ "ADD", "REMOVE", "DEPLOY", "DELETE" ]
        },
        "attemptNumber" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SingularityWebhook" : {
      "id" : "SingularityWebhook",
      "properties" : {
        "uri" : {
          "type" : "string",
          "description" : "URI to POST to."
        },
        "type" : {
          "$ref" : "WebhookType",
          "description" : "Webhook type.",
          "enum" : [ "TASK", "REQUEST", "DEPLOY" ]
        },
        "user" : {
          "type" : "string",
          "description" : "User that created webhook."
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique ID for webhook."
        }
      }
    },
    "SingularityLoadBalancerUpdate" : {
      "id" : "SingularityLoadBalancerUpdate",
      "properties" : {
        "loadBalancerState" : {
          "$ref" : "BaragonRequestState",
          "enum" : [ "UNKNOWN", "FAILED", "WAITING", "SUCCESS", "CANCELING", "CANCELED", "INVALID_REQUEST_NOOP" ]
        },
        "message" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "uri" : {
          "type" : "string"
        },
        "method" : {
          "$ref" : "LoadBalancerMethod",
          "enum" : [ "PRE_ENQUEUE", "ENQUEUE", "CHECK_STATE", "CANCEL", "DELETE" ]
        },
        "loadBalancerRequestId" : {
          "$ref" : "LoadBalancerRequestId"
        }
      }
    },
    "SingularityDockerPortMapping" : {
      "id" : "SingularityDockerPortMapping",
      "properties" : {
        "containerPortType" : {
          "$ref" : "SingularityPortMappingType",
          "enum" : [ "LITERAL", "FROM_OFFER" ]
        },
        "hostPortType" : {
          "$ref" : "SingularityPortMappingType",
          "enum" : [ "LITERAL", "FROM_OFFER" ]
        },
        "containerPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hostPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "protocol" : {
          "type" : "string"
        }
      }
    },
    "S3Artifact" : {
      "id" : "S3Artifact",
      "properties" : {
        "s3Bucket" : {
          "type" : "string"
        },
        "s3ObjectKey" : {
          "type" : "string"
        },
        "filesize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "filename" : {
          "type" : "string"
        },
        "md5sum" : {
          "type" : "string"
        },
        "targetFolderRelativeToTask" : {
          "type" : "string"
        }
      }
    },
    "SingularityDeployFailure" : {
      "id" : "SingularityDeployFailure",
      "properties" : {
        "reason" : {
          "$ref" : "SingularityDeployFailureReason",
          "enum" : [ "TASK_FAILED_ON_STARTUP", "TASK_FAILED_HEALTH_CHECKS", "TASK_COULD_NOT_BE_SCHEDULED", "TASK_NEVER_ENTERED_RUNNING", "TASK_EXPECTED_RUNNING_FINISHED", "DEPLOY_CANCELLED", "DEPLOY_OVERDUE", "FAILED_TO_SAVE_DEPLOY_STATE", "LOAD_BALANCER_UPDATE_FAILED", "PENDING_DEPLOY_REMOVED" ]
        },
        "taskId" : {
          "$ref" : "SingularityTaskId"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "SingularityDeployUpdate" : {
      "id" : "SingularityDeployUpdate",
      "properties" : {
        "deployMarker" : {
          "$ref" : "SingularityDeployMarker"
        },
        "deploy" : {
          "$ref" : "SingularityDeploy"
        },
        "eventType" : {
          "$ref" : "DeployEventType",
          "enum" : [ "STARTING", "FINISHED" ]
        },
        "deployResult" : {
          "$ref" : "SingularityDeployResult"
        }
      }
    },
    "ExecutorData" : {
      "id" : "ExecutorData",
      "properties" : {
        "cmd" : {
          "type" : "string"
        },
        "embeddedArtifacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "EmbeddedArtifact"
          }
        },
        "externalArtifacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "ExternalArtifact"
          }
        },
        "s3Artifacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "S3Artifact"
          }
        },
        "successfulExitCodes" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "runningSentinel" : {
          "type" : "string"
        },
        "user" : {
          "type" : "string"
        },
        "extraCmdLineArgs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "loggingTag" : {
          "type" : "string"
        },
        "loggingExtraFields" : {
          "$ref" : "Map[string,string]"
        },
        "sigKillProcessesAfterMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxTaskThreads" : {
          "type" : "integer",
          "format" : "int32"
        },
        "preserveTaskSandboxAfterFinish" : {
          "type" : "boolean"
        },
        "loggingS3Bucket" : {
          "type" : "string"
        },
        "maxOpenFiles" : {
          "type" : "integer",
          "format" : "int32"
        },
        "skipLogrotateAndCompress" : {
          "type" : "boolean"
        },
        "s3ArtifactSignatures" : {
          "type" : "array",
          "items" : {
            "$ref" : "S3ArtifactSignature"
          }
        }
      }
    },
    "SingularityRequestHistory" : {
      "id" : "SingularityRequestHistory",
      "properties" : {
        "createdAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user" : {
          "type" : "string"
        },
        "eventType" : {
          "$ref" : "RequestHistoryType",
          "enum" : [ "CREATED", "UPDATED", "DELETED", "PAUSED", "UNPAUSED", "ENTERED_COOLDOWN", "EXITED_COOLDOWN", "FINISHED", "DEPLOYED_TO_UNPAUSE", "BOUNCED", "SCALED", "SCALE_REVERTED" ]
        },
        "request" : {
          "$ref" : "SingularityRequest"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "SingularityRequest" : {
      "id" : "SingularityRequest",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "requestType" : {
          "$ref" : "RequestType",
          "enum" : [ "SERVICE", "WORKER", "SCHEDULED", "ON_DEMAND", "RUN_ONCE" ]
        },
        "owners" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "numRetriesOnFailure" : {
          "type" : "integer",
          "format" : "int32"
        },
        "schedule" : {
          "type" : "string"
        },
        "quartzSchedule" : {
          "type" : "string"
        },
        "scheduleType" : {
          "$ref" : "ScheduleType"
        },
        "killOldNonLongRunningTasksAfterMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "scheduledExpectedRuntimeMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "waitAtLeastMillisAfterTaskFinishesForReschedule" : {
          "type" : "integer",
          "format" : "int64"
        },
        "instances" : {
          "type" : "integer",
          "format" : "int32"
        },
        "skipHealthchecks" : {
          "type" : "boolean"
        },
        "rackSensitive" : {
          "type" : "boolean"
        },
        "rackAffinity" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "slavePlacement" : {
          "$ref" : "SlavePlacement"
        },
        "requiredSlaveAttributes" : {
          "$ref" : "Map[string,string]"
        },
        "allowedSlaveAttributes" : {
          "$ref" : "Map[string,string]"
        },
        "loadBalanced" : {
          "type" : "boolean"
        },
        "group" : {
          "type" : "string"
        },
        "readOnlyGroups" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "bounceAfterScale" : {
          "type" : "boolean"
        },
        "emailConfigurationOverrides" : {
          "$ref" : "Map[SingularityEmailType,List[SingularityEmailDestination]]"
        }
      }
    },
    "SingularityDeployMarker" : {
      "id" : "SingularityDeployMarker",
      "properties" : {
        "requestId" : {
          "type" : "string"
        },
        "deployId" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "user" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "SingularityDeployResult" : {
      "id" : "SingularityDeployResult",
      "properties" : {
        "deployState" : {
          "$ref" : "DeployState",
          "enum" : [ "SUCCEEDED", "FAILED_INTERNAL_STATE", "CANCELING", "WAITING", "OVERDUE", "FAILED", "CANCELED" ]
        },
        "lbUpdate" : {
          "$ref" : "SingularityLoadBalancerUpdate"
        },
        "message" : {
          "type" : "string"
        },
        "deployFailures" : {
          "type" : "array",
          "items" : {
            "$ref" : "SingularityDeployFailure"
          }
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "S3ArtifactSignature" : {
      "id" : "S3ArtifactSignature",
      "properties" : {
        "artifactFilename" : {
          "type" : "string"
        },
        "s3ObjectKey" : {
          "type" : "string"
        },
        "s3Bucket" : {
          "type" : "string"
        },
        "filesize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "filename" : {
          "type" : "string"
        },
        "md5sum" : {
          "type" : "string"
        },
        "targetFolderRelativeToTask" : {
          "type" : "string"
        }
      }
    },
    "SingularityDeploy" : {
      "id" : "SingularityDeploy",
      "required" : [ "requestId", "id" ],
      "properties" : {
        "requestId" : {
          "type" : "string",
          "description" : "Singularity Request Id which is associated with this deploy."
        },
        "id" : {
          "type" : "string",
          "description" : "Singularity deploy id."
        },
        "version" : {
          "type" : "string",
          "description" : "Deploy version"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Deploy timestamp."
        },
        "metadata" : {
          "$ref" : "Map[string,string]",
          "description" : "Map of metadata key/value pairs associated with the deployment."
        },
        "containerInfo" : {
          "$ref" : "SingularityContainerInfo",
          "description" : "Container information for deployment into a container."
        },
        "customExecutorCmd" : {
          "type" : "string",
          "description" : "Custom Mesos executor"
        },
        "customExecutorId" : {
          "type" : "string",
          "description" : "Custom Mesos executor id."
        },
        "customExecutorSource" : {
          "type" : "string",
          "description" : "Custom Mesos executor source."
        },
        "customExecutorResources" : {
          "$ref" : "Resources",
          "description" : "Resources to allocate for custom mesos executor"
        },
        "customExecutorUser" : {
          "type" : "string",
          "description" : "User to run custom executor as"
        },
        "resources" : {
          "$ref" : "com.hubspot.mesos.Resources",
          "description" : "Resources required for this deploy."
        },
        "command" : {
          "type" : "string",
          "description" : "Command to execute for this deployment."
        },
        "arguments" : {
          "type" : "array",
          "description" : "Command arguments.",
          "items" : {
            "type" : "string"
          }
        },
        "env" : {
          "$ref" : "Map[string,string]",
          "description" : "Map of environment variable definitions."
        },
        "uris" : {
          "type" : "array",
          "description" : "List of URIs to download before executing the deploy command.",
          "items" : {
            "type" : "string"
          }
        },
        "executorData" : {
          "$ref" : "ExecutorData",
          "description" : "Executor specific information"
        },
        "labels" : {
          "$ref" : "Map[string,string]",
          "description" : "Labels for tasks associated with this deploy"
        },
        "healthcheckUri" : {
          "type" : "string",
          "description" : "Deployment Healthcheck URI, if specified will be called after TASK_RUNNING."
        },
        "healthcheckIntervalSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time to wait after a failed healthcheck to try again in seconds."
        },
        "healthcheckTimeoutSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Single healthcheck HTTP timeout in seconds."
        },
        "healthcheckPortIndex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Perform healthcheck on this dynamically allocated port (e.g. 0 for first port), defaults to first port"
        },
        "skipHealthchecksOnDeploy" : {
          "type" : "boolean",
          "description" : "Allows skipping of health checks when deploying."
        },
        "healthcheckProtocol" : {
          "$ref" : "HealthcheckProtocol",
          "description" : "Healthcheck protocol - HTTP or HTTPS"
        },
        "healthcheckMaxRetries" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum number of times to retry an individual healthcheck before failing the deploy."
        },
        "healthcheckMaxTotalTimeoutSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Maximum amount of time to wait before failing a deploy for healthchecks to pass."
        },
        "deployHealthTimeoutSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Number of seconds that Singularity waits for this service to become healthy (for it to download artifacts, start running, and optionally pass healthchecks.)"
        },
        "considerHealthyAfterRunningForSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Number of seconds that a service must be healthy to consider the deployment to be successful."
        },
        "serviceBasePath" : {
          "type" : "string",
          "description" : "The base path for the API exposed by the deploy. Used in conjunction with the Load balancer API."
        },
        "loadBalancerGroups" : {
          "type" : "array",
          "uniqueItems" : true,
          "description" : "List of load balancer groups associated with this deployment.",
          "items" : {
            "type" : "string"
          }
        },
        "loadBalancerPortIndex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Send this port to the load balancer api (e.g. 0 for first port), defaults to first port"
        },
        "loadBalancerOptions" : {
          "$ref" : "Map[string,Object]",
          "description" : "Map (Key/Value) of options for the load balancer."
        },
        "deployInstanceCountPerStep" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "deploy this many instances at a time"
        },
        "deployStepWaitTimeMs" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "wait this long between deploy steps"
        },
        "autoAdvanceDeploySteps" : {
          "type" : "boolean",
          "description" : "automatically advance to the next target instance count after `deployStepWaitTimeMs` seconds"
        },
        "maxTaskRetries" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "allowed at most this many failed tasks to be retried before failing the deploy"
        }
      }
    },
    "EmbeddedArtifact" : {
      "id" : "EmbeddedArtifact",
      "properties" : {
        "content" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "name" : {
          "type" : "string"
        },
        "filename" : {
          "type" : "string"
        },
        "md5sum" : {
          "type" : "string"
        },
        "targetFolderRelativeToTask" : {
          "type" : "string"
        }
      }
    },
    "SingularityTaskId" : {
      "id" : "SingularityTaskId",
      "properties" : {
        "requestId" : {
          "type" : "string"
        },
        "deployId" : {
          "type" : "string"
        },
        "startedAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "instanceNo" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sanitizedHost" : {
          "type" : "string"
        },
        "sanitizedRackId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        },
        "rackId" : {
          "type" : "string"
        }
      }
    },
    "ExternalArtifact" : {
      "id" : "ExternalArtifact",
      "properties" : {
        "url" : {
          "type" : "string"
        },
        "filesize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "filename" : {
          "type" : "string"
        },
        "md5sum" : {
          "type" : "string"
        },
        "targetFolderRelativeToTask" : {
          "type" : "string"
        }
      }
    },
    "SingularityContainerInfo" : {
      "id" : "SingularityContainerInfo",
      "properties" : {
        "type" : {
          "$ref" : "SingularityContainerType",
          "enum" : [ "MESOS", "DOCKER" ]
        },
        "volumes" : {
          "type" : "array",
          "items" : {
            "$ref" : "SingularityVolume"
          }
        },
        "docker" : {
          "$ref" : "SingularityDockerInfo"
        }
      }
    },
    "SingularityVolume" : {
      "id" : "SingularityVolume",
      "properties" : {
        "containerPath" : {
          "type" : "string"
        },
        "hostPath" : {
          "type" : "string"
        },
        "mode" : {
          "$ref" : "SingularityDockerVolumeMode"
        }
      }
    },
    "SingularityDockerInfo" : {
      "id" : "SingularityDockerInfo",
      "properties" : {
        "image" : {
          "type" : "string"
        },
        "privileged" : {
          "type" : "boolean"
        },
        "network" : {
          "$ref" : "SingularityDockerNetworkType"
        },
        "portMappings" : {
          "type" : "array",
          "items" : {
            "$ref" : "SingularityDockerPortMapping"
          }
        },
        "forcePullImage" : {
          "type" : "boolean"
        },
        "parameters" : {
          "$ref" : "Map[string,string]"
        }
      }
    },
    "SingularityTaskHistoryUpdate" : {
      "id" : "SingularityTaskHistoryUpdate",
      "properties" : {
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "taskState" : {
          "$ref" : "ExtendedTaskState",
          "enum" : [ "TASK_LAUNCHED", "TASK_STAGING", "TASK_STARTING", "TASK_RUNNING", "TASK_CLEANING", "TASK_FINISHED", "TASK_FAILED", "TASK_KILLED", "TASK_LOST", "TASK_LOST_WHILE_DOWN", "TASK_ERROR" ]
        },
        "statusMessage" : {
          "type" : "string"
        },
        "statusReason" : {
          "type" : "string"
        },
        "taskId" : {
          "$ref" : "SingularityTaskId"
        }
      }
    }
  }
}